# Quick rundown of data types:
# - float: "floating-point" number, can have decimal places. Use a period as the decimal separator, please, e.g. 3.14
# - int: "integers", whole numbers (no decimals)
#       Can also represent a color, in which case you can use hex notation:
#       0x(RR)(GG)(BB) e.g. 0xEED202 for #EED202 (not case sensitive!)
# - boolean: true/false
# - hexadecimal (color): "short" value (0-255) represented by TWO hexadecimal (base-16) numbers., e.g. 0xFF


# Debug mode – enable this when reproducing your bug; disable normally
# Prints many, many, many messages to the log file
debug=false


#######################
# Performance options #
#######################

# !!! NOTE: This option was removed in 1.4.0 !!!
#lazy_conflict_check=true

# How many vertices/facets the pie menu circle should have in total (int)
# I picked 60 because it's divisible by many possible sector numbers and gives reasonable results for others
#   Best not to change this, because the pie menu won't have *exactly* this many vertices (the code is complicated)
#   If you make it too low, you'll know because the edges of the menu will be very flat
#   Can *technically* help performance, but probably not much unless your hardware is VERY slow
circle_vertices=60

# If transparency should be enabled for the pie menu (boolean)
# Can slightly increase performance by avoiding blend calculations
pie_menu_blend=true

# Whether there should be a darkened background on the pie menu screen (boolean)
# Has a decent impact on performance, because of post-processing
darkened_background=true

# Draw label texts with shadow (boolean)
# Disabling this may increase performance
label_text_shadow=true


#####################
# Behaviour options #
#####################

# Attack workaround (boolean)
# Makes Attack/Break work properly on the pie menu
# (messes with the attack cooldown; may cause problems)
# (IMPORTANT) Leave this as `true` if you're using EpicFight!
enable_attack_workaround=true

# !!! NOTE: Changed from `skipped_keys` !!!
# Keys that should not open a pie menu (list of keycode ints)
# See https://www.glfw.org/docs/3.4/group__keys.html for keycodes
# Defaults to WASD
ignored_keys=[87, 65, 83, 68]

# Whether to turn the skipped_keys list from a "blacklist" to a "whitelist"
# Makes the mod ignore all keys except those in `ignored_keys`
invert_ignored_keys_list=false

# Use behaviour similar to KeybindFix for keys that don't open a pie menu (boolean)
# Makes these keys activate all bindings, instead of just one
use_keybind_fix=true


##########################
# Pie menu customisation #
##########################

# How much the selected sector expands by (float)
expansion_factor_when_selected=1.15

# How much extra to shrink the pie menu by (int)
pie_menu_margin=0

# How big the pie menu should be, relative to the screen size (float)
pie_menu_scale=0.6

# How big the cancel zone should be, relative to the pie menu size (float)
cancel_zone_scale=0.25

# RGB color of the pie menu (gray by default) (hexadecimal RGB COLOR)
pie_menu_color=0x404040

# RGB color of the selected section (white by default) (hexadecimal RGB COLOR)
pie_menu_select_color=0xFFFFFF

# RGB colour of the clicked section
pie_menu_highlight_color=0xEED202

# How much lighter to make every other sector (so you can tell individual sectors apart) (hexadecimal RGB)
# Note: you can easily cause the color components of pie_menu_select_color to overflow.
#   If you don't know what that means, just keep each pair of digits (19 by default) small.
pie_menu_color_lighten_factor=0x191919

# How opaque the pie menu should be (hexadecimal)
# Note: This is OPACITY, NOT transparency – lower values make it more transprent
# See Performance options > pie menu blend – just set that to true if you want a fully
#   opaque pie menu, since that will avoid extra calculations associated with transparency,
#   even if this value makes the pie menu completely opaque
pie_menu_alpha=0x90

# Whether the pie menu sectors should have gradation (not a solid color) (boolean)
sector_gradation=true

# How far into the sector the label texts reach (int)
#   (unless the text goes off the screen, in which case it's
#   moved back as far as needed until it fits on-screen)
label_text_inset=6

# Whether to animate the pie menu opening (boolean)
# Can be distracting, disabled by default now
# Probably doesn't impact performance very much
animate_pie_menu=false
